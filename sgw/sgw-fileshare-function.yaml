AWSTemplateFormatVersion: 2010-09-09

Description: >-
  Create Lambda IAM permssions and Lambda function to create Storage Gateway file share

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: Lambda Code Location
        Parameters:
          - LambdaCodeS3Bucket
          - LambdaFunctionS3Key
          - Boto3LayerS3Key
      - Label:
          default: General Settings
        Parameters:
          - Project

Parameters:
  Project:
    Description: Tag used for resource groups and billing
    Type: String
    Default: POC    
  LambdaCodeS3Bucket:
    Type: String
    Default: my-code-bucket
    Description: S3 bucket where the Lambda funcation and layer 'zip' archives are stored.
  LambdaFunctionS3Key:
    Type: String
    Default: code/fgw-fileshare.zip
    Description: S3 key (path and file name) of the Lambda 'zip' archive.
  Boto3LayerS3Key:
    Type: String
    Default: layer/boto3-layer.zip
    Description: S3 key (path and file name) of the Boto3 SDK 'zip' archive.
    
Resources:
  FileShareLambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/CloudWatchLogsFullAccess'    
      Path: /
  FileShareLambdaExecutionPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join
        - '-'
        - - !Ref Project
          - 'IAMPolicy'
      Roles:
        - !Ref FileShareLambdaExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 'iam:PassRole'
            Resource: 'arn:aws:iam::*:role/*'
          - Effect: Allow
            Action:
              - 'lambda:AddPermission'
              - 'lambda:RemovePermission'
            Resource: '*'
          - Effect: Allow
            Action: 'storagegateway:CreateSMBFileShare'
            Resource: 'arn:aws:storagegateway:*:*:gateway/*'
          - Effect: Allow
            Action: 'storagegateway:ListGateways'
            Resource: '*'
          - Effect: Allow
            Action: 'storagegateway:DescribeGatewayInformation'
            Resource: 'arn:aws:storagegateway:*:*:gateway/*'
          - Effect: Allow
            Action:
              - 'events:PutTargets'
              - 'events:RemoveTargets'
              - 'events:PutRule'
              - 'events:DeleteRule'
            Resource: 'arn:aws:events:*:*:rule/*'
  Boto3Layer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes: 
        - python3.7
        - python3.8
      Content: 
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: !Ref Boto3LayerS3Key
      Description: Boto3 SDK layer 
      LayerName: !Join
        - '-'
        - - !Ref Project
          - boto3
  FileShareLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: Create File Gateway file share (stack_name, file_gateway)
      Runtime: python3.8
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: !Ref LambdaFunctionS3Key
      Layers:
        - !Ref Boto3Layer
      Environment: {}
      Handler: fgw-fileshare.handler
      MemorySize: 256
      Role: !GetAtt FileShareLambdaExecutionRole.Arn
      Timeout: 30
  FileShareLambdaLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties: 
      RetentionInDays: 7
      LogGroupName: !Join ['', ['/aws/lambda/', !Ref FileShareLambda ]]

Outputs:
  FileShareFunctionARN:
    Value: !GetAtt
      - FileShareLambda
      - Arn
    Description: The FileShare lambda function ARN
  LambdaExecutionRole:
    Value: !GetAtt 
      - FileShareLambdaExecutionRole
      - Arn
    Description: FileShare Lambda IAM Role ARN
